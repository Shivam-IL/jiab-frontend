# substitutions:
#   _REGION: asia-south1
#   _PROJECT_ID: ai0015455-sfa-test
#   _REPO_NAME: tccc-sfa-test-cloud-build-repo
#   _MAIN_SERVICE: tccc-sfa-test-cloudrun-frontend

# steps:
#   # Step 1: Pull existing image for cache (ignore errors if it doesn't exist)
#   - name: 'gcr.io/cloud-builders/docker'
#     args:
#       [
#         'pull',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest'
#       ]
#     id: 'pull-cache'
#     # Allow this step to fail if the image doesn't exist yet
#     allowFailure: true

#   # Step 2: Build Docker image with caching enabled
#   - name: 'gcr.io/cloud-builders/docker'
#     args:
#       [
#         'build',
#         '-f',
#         'Dockerfile',
#         '-t',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA',
#         '-t',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest',
#         '--cache-from',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest',
#         '--build-arg',
#         'BUILDKIT_INLINE_CACHE=1',
#         '.'
#       ]
#     id: 'build-image'
#     waitFor: ['pull-cache']

#   # Step 3: Push SHA-tagged image
#   - name: 'gcr.io/cloud-builders/docker'
#     args:
#       [
#         'push',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA'
#       ]
#     id: 'push-sha'
#     waitFor: ['build-image']

#   # Step 4: Push latest tag image (for caching and convenience)
#   - name: 'gcr.io/cloud-builders/docker'
#     args:
#       [
#         'push',
#         '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest'
#       ]
#     id: 'push-latest'
#     waitFor: ['build-image']

#   # Step 5: Deploy to Cloud Run with secrets and settings
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       [
#         'run',
#         'deploy',
#         'tccc-sfa-test-cloudrun-front-end',
#         '--image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA',
#         '--region=${_REGION}',
#         '--platform=managed',
#         '--execution-environment=gen2',
#         '--allow-unauthenticated',
#         '--service-account=tccc-sfa-test-cloudrun-sa@${_PROJECT_ID}.iam.gserviceaccount.com',
#         '--vpc-egress=all',
#         '--min-instances=1',
#         '--max-instances=3',
#         '--cpu=1',
#         '--memory=512Mi',
#         '--set-secrets=NEXT_PUBLIC_API_URL=NEXT_PUBLIC_API_URL:latest,NEXT_PUBLIC_STRAPI_API_URL=NEXT_PUBLIC_STRAPI_API_URL:latest,NEXT_PUBLIC_GLUEDIN_API_KEY=NEXT_PUBLIC_GLUEDIN_API_KEY:latest,NEXT_PUBLIC_GLUEDIN_SECRET_KEY=NEXT_PUBLIC_GLUEDIN_SECRET_KEY:latest,NEXT_PUBLIC_SECRET_KEY=NEXT_PUBLIC_SECRET_KEY:latest,NEXT_PUBLIC_GA_ID=NEXT_PUBLIC_GA_ID:latest,NEXT_PUBLIC_FIREBASE_API_KEY=NEXT_PUBLIC_FIREBASE_API_KEY:latest,NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:latest,NEXT_PUBLIC_FIREBASE_PROJECT_ID=NEXT_PUBLIC_FIREBASE_PROJECT_ID:latest,NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET:latest,NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID:latest,NEXT_PUBLIC_FIREBASE_APP_ID=NEXT_PUBLIC_FIREBASE_APP_ID:latest,NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID:latest,NEXT_PUBLIC_FIREBASE_VAPID_KEY=NEXT_PUBLIC_FIREBASE_VAPID_KEY:latest,NEXT_PUBLIC_INFOBIP_WHATSAPP_URL=NEXT_PUBLIC_INFOBIP_WHATSAPP_URL:latest,NEXT_PUBLIC_CDP_CLIENT_ID=NEXT_PUBLIC_CDP_CLIENT_ID:latest,NEXT_PUBLIC_CDP_BRAND_NAME=NEXT_PUBLIC_CDP_BRAND_NAME:latest,NEXT_PUBLIC_CDP_API_URL=NEXT_PUBLIC_CDP_API_URL:latest,NEXT_PUBLIC_CDP_API_KEY=NEXT_PUBLIC_CDP_API_KEY:latest,NEXT_PUBLIC_CDP_USER_IDENTIFIED_TYPE=NEXT_PUBLIC_CDP_USER_IDENTIFIED_TYPE:latest,NEXT_PUBLIC_CDP_USER_IDENTIFIER_SUB_TYPE=NEXT_PUBLIC_CDP_USER_IDENTIFIER_SUB_TYPE:latest,NEXT_PUBLIC_IP_URL=NEXT_PUBLIC_IP_URL:latest'
#       ]
#     id: 'deploy-cloudrun'
#     waitFor: ['push-sha', 'push-latest']

# images:
#   - ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA
#   - ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest

# options:
#   machineType: E2_HIGHCPU_8
#   logging: CLOUD_LOGGING_ONLY












substitutions:
  _REGION: asia-south1
  _PROJECT_ID: ai0015455-sfa-test
  _REPO_NAME: tccc-sfa-test-cloud-build-repo
  _MAIN_SERVICE: tccc-sfa-test-cloudrun-frontend

steps:
  # Step 1: Pull existing image for cache (ignore errors if it doesn't exist)
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest || exit 0']
    id: 'pull-cache'

  # Step 2: Build Docker image with caching enabled
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-f',
        'Dockerfile',
        '-t',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA',
        '-t',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest',
        '--cache-from',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest',
        '.'
      ]
    id: 'build-image'
    waitFor: ['pull-cache']

  # Step 3: Push SHA-tagged image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA'
      ]
    id: 'push-sha'
    waitFor: ['build-image']

  # Step 4: Push latest tag image (for caching and convenience)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest'
      ]
    id: 'push-latest'
    waitFor: ['build-image']

  # Step 5: Deploy to Cloud Run with secrets and settings
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'tccc-sfa-test-cloudrun-front-end',
        '--image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA',
        '--region=${_REGION}',
        '--platform=managed',
        '--execution-environment=gen2',
        '--allow-unauthenticated',
        '--service-account=tccc-sfa-test-cloudrun-sa@${_PROJECT_ID}.iam.gserviceaccount.com',
        '--vpc-egress=all',
        '--min-instances=1',
        '--max-instances=3',
        '--cpu=1',
        '--memory=512Mi',
        '--set-secrets=NEXT_PUBLIC_API_URL=NEXT_PUBLIC_API_URL:latest,NEXT_PUBLIC_STRAPI_API_URL=NEXT_PUBLIC_STRAPI_API_URL:latest,NEXT_PUBLIC_GLUEDIN_API_KEY=NEXT_PUBLIC_GLUEDIN_API_KEY:latest,NEXT_PUBLIC_GLUEDIN_SECRET_KEY=NEXT_PUBLIC_GLUEDIN_SECRET_KEY:latest,NEXT_PUBLIC_SECRET_KEY=NEXT_PUBLIC_SECRET_KEY:latest,NEXT_PUBLIC_GA_ID=NEXT_PUBLIC_GA_ID:latest,NEXT_PUBLIC_FIREBASE_API_KEY=NEXT_PUBLIC_FIREBASE_API_KEY:latest,NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:latest,NEXT_PUBLIC_FIREBASE_PROJECT_ID=NEXT_PUBLIC_FIREBASE_PROJECT_ID:latest,NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET:latest,NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID:latest,NEXT_PUBLIC_FIREBASE_APP_ID=NEXT_PUBLIC_FIREBASE_APP_ID:latest,NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID:latest,NEXT_PUBLIC_FIREBASE_VAPID_KEY=NEXT_PUBLIC_FIREBASE_VAPID_KEY:latest,NEXT_PUBLIC_INFOBIP_WHATSAPP_URL=NEXT_PUBLIC_INFOBIP_WHATSAPP_URL:latest,NEXT_PUBLIC_CDP_CLIENT_ID=NEXT_PUBLIC_CDP_CLIENT_ID:latest,NEXT_PUBLIC_CDP_BRAND_NAME=NEXT_PUBLIC_CDP_BRAND_NAME:latest,NEXT_PUBLIC_CDP_API_URL=NEXT_PUBLIC_CDP_API_URL:latest,NEXT_PUBLIC_CDP_API_KEY=NEXT_PUBLIC_CDP_API_KEY:latest,NEXT_PUBLIC_CDP_USER_IDENTIFIED_TYPE=NEXT_PUBLIC_CDP_USER_IDENTIFIED_TYPE:latest,NEXT_PUBLIC_CDP_USER_IDENTIFIER_SUB_TYPE=NEXT_PUBLIC_CDP_USER_IDENTIFIER_SUB_TYPE:latest,NEXT_PUBLIC_IP_URL=NEXT_PUBLIC_IP_URL:latest'
      ]
    id: 'deploy-cloudrun'
    waitFor: ['push-sha', 'push-latest']

images:
  - ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:$SHORT_SHA
  - ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_MAIN_SERVICE}:latest

options:
  machineType: E2_HIGHCPU_8
  logging: CLOUD_LOGGING_ONLY
